[build]
  publish = "."
  command = """
    if [ ! -d "/opt/build/cache/python_env" ]; then
      echo '🐍 Python 가상 환경 생성...'
      python -m venv /opt/build/cache/python_env
    fi
    source /opt/build/cache/python_env/bin/activate
    if [ ! -d "/opt/build/cache/pip_cache" ]; then
      echo '📂 pip 캐시 디렉터리 생성...'
      mkdir -p /opt/build/cache/pip_cache
    fi
    if [ ! -f "/opt/build/cache/pip_cache/wheelhouse.lock" ]; then
      echo '📦 라이브러리 캐시가 없습니다. 새로 설치합니다.'
      pip install --cache-dir /opt/build/cache/pip_cache -r netlify/functions/my_ai/requirements.txt
      touch /opt/build/cache/pip_cache/wheelhouse.lock
    else
      echo '✅ 캐시된 라이브러리 사용 중!'
    fi
  """

[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"
  included_files = ["netlify/functions/my_ai/**"]

[[headers]]
  for = "/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[redirects]]
  from = "/pwa/*"
  to = "/pwa/:splat"
  status = 200

[[redirects]]
  from = "/*"
  to = "/offline.html"
  status = 200
  condition = {Country = ["XX"]}
